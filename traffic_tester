import subprocess
import time
import os



class Traffic_Test:

    def __init__(self, file_path,  file_name):
        self.file_path = file_path
        self.file_name = file_name

        print(file_path)
        print(file_name)

        timeout = 1
        input_interface = 'enp6s0'
        output_interface = 'enp5s0'

        file_to_send = os.path.join(file_path, file_name)
        file_capture = os.path.join('/home/noam/test_results', file_name)

        os.system("rm -rf %s" % (file_capture))

        # TCP DUMP:

        tcpdump_process = subprocess.Popen("tcpdump -i %s -U --immediate-mode -s0 -v -w %s" % (output_interface, file_capture), stdout=subprocess.PIPE, stderr=subprocess.PIPE, shell=
True)
        print("tcpdump -i %s -U --immediate-mode -s0 -v -w %s" % (output_interface, file_capture))

        # os.system("ps -ef")

        # tcpdump_cmd_list = ['sudo', 'tcpdump', '-i', output_interface , 'port 514', '-s0', '-w', file_capture]
        # tcpdump_process = subprocess.Popen(tcpdump_cmd_list, stdout=subprocess.PIPE)

        # TCP Replay:

        os.system("sudo tcpreplay -i %s  %s" % (input_interface, file_to_send))
        print("sudo tcpreplay -i %s %s" % (input_interface, file_to_send))

        time.sleep(1)


        # stdout, stderr = tcpdump_process.communicate()
        # print('before %s  %s ', stdout, stderr)

        tcpdump_process.terminate()  # close tcpdump

        # os.system("ps -ef")

        # stdout, stderr = tcpdump_process.communicate()
        # print('after %s  %s', stdout, stderr)

        os.system("chmod 777 * %s" % file_capture)


os.system("sudo kill $(pidof tcpdump")
